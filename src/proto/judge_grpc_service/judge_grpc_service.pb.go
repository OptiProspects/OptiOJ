// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.2
// source: src/proto/judge_grpc_service/judge_grpc_service.proto

package judge_grpc_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestCase struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Input          string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	ExpectedOutput string                 `protobuf:"bytes,2,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestCase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TestCase) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

type SubmitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	SourceCode    string                 `protobuf:"bytes,2,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"`
	TimeLimit     int32                  `protobuf:"varint,3,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`       // 单位：毫秒
	MemoryLimit   int32                  `protobuf:"varint,4,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"` // 单位：MB
	TestCases     []*TestCase            `protobuf:"bytes,5,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`        // 多个测试点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitRequest) Reset() {
	*x = SubmitRequest{}
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRequest) ProtoMessage() {}

func (x *SubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRequest.ProtoReflect.Descriptor instead.
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SubmitRequest) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

func (x *SubmitRequest) GetTimeLimit() int32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *SubmitRequest) GetMemoryLimit() int32 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *SubmitRequest) GetTestCases() []*TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type TestCaseResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TimeUsed      float64                `protobuf:"fixed64,2,opt,name=time_used,json=timeUsed,proto3" json:"time_used,omitempty"`       // 单位：毫秒
	MemoryUsed    float64                `protobuf:"fixed64,3,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"` // 单位：KB
	ActualOutput  string                 `protobuf:"bytes,4,opt,name=actual_output,json=actualOutput,proto3" json:"actual_output,omitempty"`
	TestCaseId    int32                  `protobuf:"varint,5,opt,name=test_case_id,json=testCaseId,proto3" json:"test_case_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCaseResult) Reset() {
	*x = TestCaseResult{}
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseResult) ProtoMessage() {}

func (x *TestCaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseResult.ProtoReflect.Descriptor instead.
func (*TestCaseResult) Descriptor() ([]byte, []int) {
	return file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *TestCaseResult) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TestCaseResult) GetTimeUsed() float64 {
	if x != nil {
		return x.TimeUsed
	}
	return 0
}

func (x *TestCaseResult) GetMemoryUsed() float64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *TestCaseResult) GetActualOutput() string {
	if x != nil {
		return x.ActualOutput
	}
	return ""
}

func (x *TestCaseResult) GetTestCaseId() int32 {
	if x != nil {
		return x.TestCaseId
	}
	return 0
}

type SubmitResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TimeUsed        float64                `protobuf:"fixed64,2,opt,name=time_used,json=timeUsed,proto3" json:"time_used,omitempty"`       // 单位：毫秒
	MemoryUsed      float64                `protobuf:"fixed64,3,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"` // 单位：KB
	ErrorMessage    string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	TestCaseResults []*TestCaseResult      `protobuf:"bytes,5,rep,name=test_case_results,json=testCaseResults,proto3" json:"test_case_results,omitempty"` // 每个测试点的结果
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubmitResponse) Reset() {
	*x = SubmitResponse{}
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResponse) ProtoMessage() {}

func (x *SubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResponse.ProtoReflect.Descriptor instead.
func (*SubmitResponse) Descriptor() ([]byte, []int) {
	return file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SubmitResponse) GetTimeUsed() float64 {
	if x != nil {
		return x.TimeUsed
	}
	return 0
}

func (x *SubmitResponse) GetMemoryUsed() float64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *SubmitResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SubmitResponse) GetTestCaseResults() []*TestCaseResult {
	if x != nil {
		return x.TestCaseResults
	}
	return nil
}

var File_src_proto_judge_grpc_service_judge_grpc_service_proto protoreflect.FileDescriptor

var file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDesc = []byte{
	0x0a, 0x35, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x08, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x32, 0x63, 0x0a, 0x10, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x47, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x12, 0x21, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x4f, 0x70, 0x74, 0x69, 0x4f,
	0x4a, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescOnce sync.Once
	file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescData = file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDesc
)

func file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescGZIP() []byte {
	file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescOnce.Do(func() {
		file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescData)
	})
	return file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDescData
}

var file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_src_proto_judge_grpc_service_judge_grpc_service_proto_goTypes = []any{
	(*TestCase)(nil),       // 0: judge_grpc_service.TestCase
	(*SubmitRequest)(nil),  // 1: judge_grpc_service.SubmitRequest
	(*TestCaseResult)(nil), // 2: judge_grpc_service.TestCaseResult
	(*SubmitResponse)(nil), // 3: judge_grpc_service.SubmitResponse
}
var file_src_proto_judge_grpc_service_judge_grpc_service_proto_depIdxs = []int32{
	0, // 0: judge_grpc_service.SubmitRequest.test_cases:type_name -> judge_grpc_service.TestCase
	2, // 1: judge_grpc_service.SubmitResponse.test_case_results:type_name -> judge_grpc_service.TestCaseResult
	1, // 2: judge_grpc_service.JudgeGrpcService.Submit:input_type -> judge_grpc_service.SubmitRequest
	3, // 3: judge_grpc_service.JudgeGrpcService.Submit:output_type -> judge_grpc_service.SubmitResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_src_proto_judge_grpc_service_judge_grpc_service_proto_init() }
func file_src_proto_judge_grpc_service_judge_grpc_service_proto_init() {
	if File_src_proto_judge_grpc_service_judge_grpc_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_proto_judge_grpc_service_judge_grpc_service_proto_goTypes,
		DependencyIndexes: file_src_proto_judge_grpc_service_judge_grpc_service_proto_depIdxs,
		MessageInfos:      file_src_proto_judge_grpc_service_judge_grpc_service_proto_msgTypes,
	}.Build()
	File_src_proto_judge_grpc_service_judge_grpc_service_proto = out.File
	file_src_proto_judge_grpc_service_judge_grpc_service_proto_rawDesc = nil
	file_src_proto_judge_grpc_service_judge_grpc_service_proto_goTypes = nil
	file_src_proto_judge_grpc_service_judge_grpc_service_proto_depIdxs = nil
}
